/*
 * Generated by gdbus-codegen 2.30.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __OBJECT_CORE_H__
#define __OBJECT_CORE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2 */

#define MPRIS_TYPE_MEDIA_PLAYER2 (mpris_media_player2_get_type ())
#define MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS_TYPE_MEDIA_PLAYER2, MprisMediaPlayer2))
#define MPRIS_IS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS_TYPE_MEDIA_PLAYER2))
#define MPRIS_MEDIA_PLAYER2_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), MPRIS_TYPE_MEDIA_PLAYER2, MprisMediaPlayer2Iface))

struct _MprisMediaPlayer2;
typedef struct _MprisMediaPlayer2 MprisMediaPlayer2;
typedef struct _MprisMediaPlayer2Iface MprisMediaPlayer2Iface;

struct _MprisMediaPlayer2Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_quit) (
    MprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_raise) (
    MprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_quit) (MprisMediaPlayer2 *object);

  gboolean  (*get_can_raise) (MprisMediaPlayer2 *object);

  const gchar * (*get_desktop_entry) (MprisMediaPlayer2 *object);

  gboolean  (*get_has_track_list) (MprisMediaPlayer2 *object);

  const gchar * (*get_identity) (MprisMediaPlayer2 *object);

};

GType mpris_media_player2_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *mpris_media_player2_interface_info (void);
guint mpris_media_player2_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void mpris_media_player2_complete_quit (
    MprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

void mpris_media_player2_complete_raise (
    MprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void mpris_media_player2_call_quit (
    MprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mpris_media_player2_call_quit_finish (
    MprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mpris_media_player2_call_quit_sync (
    MprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);

void mpris_media_player2_call_raise (
    MprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mpris_media_player2_call_raise_finish (
    MprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mpris_media_player2_call_raise_sync (
    MprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean mpris_media_player2_get_can_quit (MprisMediaPlayer2 *object);
void mpris_media_player2_set_can_quit (MprisMediaPlayer2 *object, gboolean value);

gboolean mpris_media_player2_get_can_raise (MprisMediaPlayer2 *object);
void mpris_media_player2_set_can_raise (MprisMediaPlayer2 *object, gboolean value);

const gchar *mpris_media_player2_get_desktop_entry (MprisMediaPlayer2 *object);
gchar *mpris_media_player2_dup_desktop_entry (MprisMediaPlayer2 *object);
void mpris_media_player2_set_desktop_entry (MprisMediaPlayer2 *object, const gchar *value);

gboolean mpris_media_player2_get_has_track_list (MprisMediaPlayer2 *object);
void mpris_media_player2_set_has_track_list (MprisMediaPlayer2 *object, gboolean value);

const gchar *mpris_media_player2_get_identity (MprisMediaPlayer2 *object);
gchar *mpris_media_player2_dup_identity (MprisMediaPlayer2 *object);
void mpris_media_player2_set_identity (MprisMediaPlayer2 *object, const gchar *value);


/* ---- */

#define MPRIS_TYPE_MEDIA_PLAYER2_PROXY (mpris_media_player2_proxy_get_type ())
#define MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS_TYPE_MEDIA_PLAYER2_PROXY, MprisMediaPlayer2Proxy))
#define MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MPRIS_TYPE_MEDIA_PLAYER2_PROXY, MprisMediaPlayer2ProxyClass))
#define MPRIS_MEDIA_PLAYER2_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MPRIS_TYPE_MEDIA_PLAYER2_PROXY, MprisMediaPlayer2ProxyClass))
#define MPRIS_IS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS_TYPE_MEDIA_PLAYER2_PROXY))
#define MPRIS_IS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MPRIS_TYPE_MEDIA_PLAYER2_PROXY))

typedef struct _MprisMediaPlayer2Proxy MprisMediaPlayer2Proxy;
typedef struct _MprisMediaPlayer2ProxyClass MprisMediaPlayer2ProxyClass;
typedef struct _MprisMediaPlayer2ProxyPrivate MprisMediaPlayer2ProxyPrivate;

struct _MprisMediaPlayer2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  MprisMediaPlayer2ProxyPrivate *priv;
};

struct _MprisMediaPlayer2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType mpris_media_player2_proxy_get_type (void) G_GNUC_CONST;

void mpris_media_player2_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
MprisMediaPlayer2 *mpris_media_player2_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
MprisMediaPlayer2 *mpris_media_player2_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void mpris_media_player2_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
MprisMediaPlayer2 *mpris_media_player2_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
MprisMediaPlayer2 *mpris_media_player2_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define MPRIS_TYPE_MEDIA_PLAYER2_SKELETON (mpris_media_player2_skeleton_get_type ())
#define MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS_TYPE_MEDIA_PLAYER2_SKELETON, MprisMediaPlayer2Skeleton))
#define MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MPRIS_TYPE_MEDIA_PLAYER2_SKELETON, MprisMediaPlayer2SkeletonClass))
#define MPRIS_MEDIA_PLAYER2_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MPRIS_TYPE_MEDIA_PLAYER2_SKELETON, MprisMediaPlayer2SkeletonClass))
#define MPRIS_IS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS_TYPE_MEDIA_PLAYER2_SKELETON))
#define MPRIS_IS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MPRIS_TYPE_MEDIA_PLAYER2_SKELETON))

typedef struct _MprisMediaPlayer2Skeleton MprisMediaPlayer2Skeleton;
typedef struct _MprisMediaPlayer2SkeletonClass MprisMediaPlayer2SkeletonClass;
typedef struct _MprisMediaPlayer2SkeletonPrivate MprisMediaPlayer2SkeletonPrivate;

struct _MprisMediaPlayer2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  MprisMediaPlayer2SkeletonPrivate *priv;
};

struct _MprisMediaPlayer2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType mpris_media_player2_skeleton_get_type (void) G_GNUC_CONST;

MprisMediaPlayer2 *mpris_media_player2_skeleton_new (void);


G_END_DECLS

#endif /* __OBJECT_CORE_H__ */
